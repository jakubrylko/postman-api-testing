{
	"info": {
		"_postman_id": "05657068-4531-4221-9173-9cdba544199d",
		"name": "UDEMY COURSE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20601120"
	},
	"item": [
		{
			"name": "Posts Chain",
			"item": [
				{
					"name": "Get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"There are 4 posts\", function () {\r",
									"    var jsonData = pm.response.json()\r",
									"    var keyCount  = Object.keys(jsonData).length\r",
									"    console.log(\"Number of posts: \" + keyCount)\r",
									"    pm.expect(keyCount).to.eql(4)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"disabled": true
								},
								{
									"key": "title",
									"value": "Drugi post",
									"disabled": true
								},
								{
									"key": "author",
									"value": "Jakub",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									],
									"query": [
										{
											"key": "id",
											"value": "1",
											"disabled": true
										},
										{
											"key": "title",
											"value": "Drugi post",
											"disabled": true
										},
										{
											"key": "author",
											"value": "Jakub",
											"disabled": true
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "309"
								},
								{
									"key": "ETag",
									"value": "W/\"135-Etf1X+kfROVB0eBHsIUsndWMWOo\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:51:05 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"title\": \"Pierwszy post\",\n        \"author\": \"Jakub I\"\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Drugi post\",\n        \"author\": \"Stefan II\"\n    },\n    {\n        \"id\": 3,\n        \"title\": \"Trzeci post\",\n        \"author\": \"MichaÅ‚ III\"\n    },\n    {\n        \"id\": 4,\n        \"title\": \"Czwarty post\",\n        \"author\": \"Andrzej IV\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create new post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set postId variable\", () => {\r",
									"postId = pm.response.json().id\r",
									"console.log(\"New post ID: \" + postId)\r",
									"pm.collectionVariables.set(\"postId\", postId);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test post\",\r\n    \"author\": \"{{$randomFirstName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Test post\",\r\n    \"author\": \"{{$randomFirstName}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, X-HTTP-Method-Override, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "Location"
								},
								{
									"key": "Location",
									"value": "http://localhost:3000/posts/5"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "61"
								},
								{
									"key": "ETag",
									"value": "W/\"3d-O62+cud+kbfOoRoYBsk5hhJJKuA\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:52:25 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Test post\",\n    \"author\": \"Sandrine\",\n    \"id\": 5\n}"
						}
					]
				},
				{
					"name": "Get one post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function () {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Test post\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "61"
								},
								{
									"key": "ETag",
									"value": "W/\"3d-O62+cud+kbfOoRoYBsk5hhJJKuA\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:52:34 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Test post\",\n    \"author\": \"Sandrine\",\n    \"id\": 5\n}"
						}
					]
				},
				{
					"name": "Update entire post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function() {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Test Post PUT\")\r",
									"});\r",
									"\r",
									"pm.test(\"Post author check\", function() {\r",
									"    pm.expect(pm.response.json().author).to.eql(\"Author Test\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Post PUT\",\r\n    \"author\": \"Author Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Test Post PUT\",\r\n    \"author\": \"Author Test\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "68"
								},
								{
									"key": "ETag",
									"value": "W/\"44-p/jXFEUGvFEtXe0we5fA+KrB89k\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:52:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Test Post PUT\",\n    \"author\": \"Author Test\",\n    \"id\": 5\n}"
						}
					]
				},
				{
					"name": "Update part of post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function () {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Test Post PATCH\")\r",
									"});\r",
									"\r",
									"pm.test(\"Post author check\", function() {\r",
									"    pm.expect(pm.response.json().author).to.eql(\"Author Test\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Post PATCH\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\": \"Test Post PATCH\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/posts/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "70"
								},
								{
									"key": "ETag",
									"value": "W/\"46-QKBpLcxEUo39gmawca6mJ8WMIUw\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:52:52 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Test Post PATCH\",\n    \"author\": \"Author Test\",\n    \"id\": 5\n}"
						}
					]
				},
				{
					"name": "Delete post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "{{postId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Example 1",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/posts/{{postId}}",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"posts",
										"{{postId}}"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Vary",
									"value": "Origin, Accept-Encoding"
								},
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "true"
								},
								{
									"key": "Cache-Control",
									"value": "no-cache"
								},
								{
									"key": "Pragma",
									"value": "no-cache"
								},
								{
									"key": "Expires",
									"value": "-1"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "ETag",
									"value": "W/\"2-vyGp6PvFo4RvsFtPoIWeCReyIC8\""
								},
								{
									"key": "Date",
									"value": "Wed, 04 May 2022 08:53:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{}"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get all posts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							],
							"query": [
								{
									"key": "id",
									"value": "1",
									"disabled": true
								},
								{
									"key": "title",
									"value": "Drugi post",
									"disabled": true
								},
								{
									"key": "author",
									"value": "Jakub",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test post\",\r\n    \"author\": \"{{$randomFirstName}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function () {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Pierwszy post\")\r",
									"});\r",
									"\r",
									"pm.test(\"Post author check\", function () {\r",
									"    pm.expect(pm.response.json().author).to.eql(\"Jakub I\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entire post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function() {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Test Post\")\r",
									"});\r",
									"\r",
									"pm.test(\"Post author check\", function() {\r",
									"    pm.expect(pm.response.json().author).to.eql(\"Author Test\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Post\",\r\n    \"author\": \"Author Test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update part of post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Post title check\", function () {\r",
									"    pm.expect(pm.response.json().title).to.eql(\"Test Post Update\")\r",
									"});\r",
									"\r",
									"pm.test(\"Post author check\", function() {\r",
									"    pm.expect(pm.response.json().author).to.eql(\"MichaÅ‚ III\")\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Test Post Update\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete post",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/posts/:postId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts",
								":postId"
							],
							"variable": [
								{
									"key": "postId",
									"value": "4"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Comments Chain",
			"item": [
				{
					"name": "Get all comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// pm.test(\"There are 6 comments\", function () {\r",
									"//     var jsonData = pm.response.json()\r",
									"//     var keyCount  = Object.keys(jsonData).length\r",
									"//     console.log(\"Number of JSON objects: \" + keyCount)\r",
									"//     pm.expect(keyCount).to.eql(6)\r",
									"// });\r",
									"\r",
									"pm.test(\"1st comment is for 2nd post\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData[0].postId).to.eql(2);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"disabled": true
								},
								{
									"key": "body",
									"value": "",
									"disabled": true
								},
								{
									"key": "postId",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response contains Testowy komentarz\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Testowy komentarz\");\r",
									"});\r",
									"\r",
									"pm.test(\"Set commentId variable\", function () {\r",
									"jsonData = pm.response.json()\r",
									"value = jsonData.id\r",
									"console.log(\"New comment ID: \" + value)\r",
									"pm.collectionVariables.set(\"commentId\", value);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz\",\r\n        \"postId\": 4\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Testowy komentarz\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Testowy komentarz\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entire comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Testowy komentarz PUT\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Testowy komentarz PUT\");\r",
									"});\r",
									"\r",
									"pm.test(\"PostId is 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz PUT\",\r\n        \"postId\": 1\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update part of comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Testowy komentarz PATCH\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Testowy komentarz PATCH\");\r",
									"});\r",
									"\r",
									"pm.test(\"PostId is still 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz PATCH\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "{{commentId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Get all comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							],
							"query": [
								{
									"key": "id",
									"value": "",
									"disabled": true
								},
								{
									"key": "body",
									"value": "",
									"disabled": true
								},
								{
									"key": "postId",
									"value": "2",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response contains Testowy komentarz\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Testowy komentarz\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz\",\r\n        \"postId\": 4\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Komentarz 1 Post 2\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Komentarz 1 Post 2\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update entire comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Testowy komentarz PUT\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Testowy komentarz PUT\");\r",
									"});\r",
									"\r",
									"pm.test(\"PostId is 1\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.postId).to.eql(1);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz PUT\",\r\n        \"postId\": 1\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update part of comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Body is Testowy komentarz PATCH\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.body).to.eql(\"Testowy komentarz PATCH\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"Testowy komentarz PATCH\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete comment",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/comments/:commentId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments",
								":commentId"
							],
							"variable": [
								{
									"key": "commentId",
									"value": "4"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Post Generator",
			"item": [
				{
					"name": "Create new posts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"{{title}}\",\r\n    \"author\": \"{{author}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/posts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"posts"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Comment Generator",
			"item": [
				{
					"name": "Create new comments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n        \"body\": \"{{body}}\",\r\n        \"postId\": {{postId}}\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/comments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"comments"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "Authorization",
			"item": [
				{
					"name": "Basic Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Auth value check\", function () {\r",
									"    pm.expect(pm.response.json().authenticated).to.eql(true);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "password",
									"type": "string"
								},
								{
									"key": "username",
									"value": "postman",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/basic-auth",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"basic-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Hawk Auth",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Message check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "hawk",
							"hawk": [
								{
									"key": "includePayloadHash",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "authId",
									"value": "dh37fgj492je",
									"type": "string"
								},
								{
									"key": "authKey",
									"value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
									"type": "string"
								},
								{
									"key": "algorithm",
									"value": "sha256",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/auth/hawk",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"auth",
								"hawk"
							]
						}
					},
					"response": []
				},
				{
					"name": "OAuth 1.0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status check\", function () {\r",
									"    pm.expect(pm.response.json().status).to.eql(\"pass\");\r",
									"});\r",
									"\r",
									"pm.test(\"Message check\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"successful\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth1",
							"oauth1": [
								{
									"key": "consumerSecret",
									"value": "D+EdQ-gs$-%@2Nu7",
									"type": "string"
								},
								{
									"key": "consumerKey",
									"value": "RKCGzna7bv9YD57c",
									"type": "string"
								},
								{
									"key": "signatureMethod",
									"value": "HMAC-SHA1",
									"type": "string"
								},
								{
									"key": "version",
									"value": "1.0",
									"type": "string"
								},
								{
									"key": "addParamsToHeader",
									"value": false,
									"type": "boolean"
								},
								{
									"key": "addEmptyParamsToSign",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://postman-echo.com/oauth1",
							"protocol": "https",
							"host": [
								"postman-echo",
								"com"
							],
							"path": [
								"oauth1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Successful request\", function () {",
							"    pm.expect(pm.response.code).to.be.eql(200);",
							"});"
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "localhost:3000",
			"type": "string"
		},
		{
			"key": "mockUrl",
			"value": "https://77fc3332-21a5-47ef-808e-2fe05b4dd11b.mock.pstmn.io",
			"type": "string"
		},
		{
			"key": "postId",
			"value": ""
		},
		{
			"key": "commentId",
			"value": "",
			"type": "string"
		}
	]
}